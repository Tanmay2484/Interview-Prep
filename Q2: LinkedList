#include <bits/stdc++.h>
using namespace std;
class Node{
   public:// access modifier
    int data; // the data value
    Node* next; // the pointer to the next value
    
    // constructor
    Node (int data1, Node* next1){
        data=data1;  // Initialize data with the provided value
        next=next1;  // Initialize next with the provided
    }
    Node (int data1){
        data=data1;  // Initialize data with the provided value
        next=nullptr;  // Initialize next as null since it's the end of the list

    }
};
void printall(Node* head){
    while(head!=nullptr){
        cout<<head->data<<" ";
        head=head->next;
    }
}
Node* removelast(Node* head){
    if(head->next==NULL || head==NULL) return NULL;
    Node* temp=head;
    while(temp->next->next!=NULL){
        temp=temp->next;
    }
     delete temp->next;
    temp->next=nullptr;
   

    return temp; 
}
Node* removek(Node* head,int k){
    if(head==NULL) return head;
    if(k==1){
        Node* temp=head;
        head=head->next;
        free(temp);   
        return head;
    }
    int count=0;
    Node* temp=head;
    Node* prev=NULL;
    while(temp!=NULL){
        count++;
        if(count==k){
            prev->next=prev->next->next;
            free(temp);
            break;
        }
        prev=temp;
        temp=temp->next;
    }
    return head;

}
int main(){
    //vector<int> arr={2,5,8,7};
    Node* head= new Node(8);
    head->next=new Node(4);
    head->next->next=new Node(6);
    head=removek(head,1);
    //removelast(head);
    printall(head);
    
}

